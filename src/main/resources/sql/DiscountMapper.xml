<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  사용자가 쿠폰을 보유하고 있는 쿠폰 정보를 저장하는 테이블 -->
<mapper namespace="DiscountMapper"> 	
 	
 	<!--  여기가 Discount 의 매핑 부분 -->
	<resultMap id="discountSelectMap" type="discount">
		<result property="discountNo" 		column="discount_no" 		jdbcType="NUMERIC"/>	
		<result property="issuedDate" 		column="issued_date" 		jdbcType="DATE" />
		<result property="expirationDate" 	column="expiration_date" 	jdbcType="DATE" />
		<result property="purchaseDate" 	column="purchase_date" 		jdbcType="DATE" />			
		
		<association property="owner" 			 column="owner_id"		javaType="user"  	select="setOwner"/>	
		<association property="discountCoupon" 	 column="coupon_no"		javaType="coupon"  	select="setCoupon"/>
		<association property="purchaseProduct"  column="product_no"	javaType="product"  select="setProduct"/>			
	
	</resultMap>
	
	
	
	<select id="setOwner" parameterType="string" resultMap="UserMapper.userSelectMap">
		SELECT * FROM users WHERE user_id = #{value}
	</select>	
	
	<select id="setCoupon" parameterType="int" resultMap="CouponMapper.couponSelectMap">
		SELECT * FROM coupon WHERE coupon_no = #{value}
	</select>
	
	<select id="setProduct" parameterType="int" resultMap="ProductMapper.prodSelectMap">
		SELECT * FROM product WHERE prod_no = #{value}
	</select>
	
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addDiscount" parameterType="discount" >
	 	INSERT INTO discount (discount_no, owner_id, coupon_no, issued_date, expiration_date)
		VALUES	 (seq_discount_no.nextval, #{owner.userId}, #{discountCoupon.couponNo}, SYSDATE, SYSDATE+30 )
	 </insert>
	 
	 
	 <select id="getDiscount" parameterType="int" resultMap="discountSelectMap">
	 	SELECT * FROM discount WHERE discount_no = #{discountNo}	 
	 </select>
	 
	 
	 <!-- 저장된 쿠폰 정보를 받아오도록 처리 (결제시 사용)-->
	 <select id="getDiscountSimpleList" parameterType="hashMap" resultMap="discountSelectMap">
	 	SELECT discount.* FROM discount,coupon
	 	WHERE discount.coupon_no = coupon.coupon_no
	 	AND discount.owner_id = #{userId}
	 	AND #{price} > coupon.minimum_price
	 	AND discount.expiration_date > SYSDATE
	 	AND discount.purchase_date IS NULL 	
	 </select>
	 
	 
	 
	 <!-- 저장된 쿠폰 정보를 받아오도록 처리(보유한 쿠폰 확인용 - 유저 ) -->
	 <select id="getDiscountList" parameterType="search" resultMap="discountSelectMap">
		SELECT *  FROM (SELECT ROW_NUMBER() OVER(ORDER BY discount.discount_no) num, discount.* FROM discount WHERE owner_id = #{searchKeyword} AND purchase_date IS NULL)
		WHERE num BETWEEN #{startRowNum} AND #{endRowNum} 	
	 </select>	
	 
	 	  
	 <!-- 저장된 쿠폰 정보를 받아오도록 처리(보유한 쿠폰 확인용 - 유저 ) -->
	 <select id="getCountDiscount"  parameterType="string" resultType="int">
		SELECT COUNT(discount_no) FROM  discount WHERE owner_id = #{value}	
	</select>
	
	
	 <select id="getCountDiscountHistory"  parameterType="search" resultType="int">
		SELECT COUNT(discount_no) FROM  discount	
		<where>
			<if test="searchCondition == 0">
				
				<if test="searchOrder == 1">
					expiration_date > SYSDATE
	 				AND purchase_date IS NULL
	 				<if test="searchKeyword !=''">
	 					AND coupon_no = #{searchKeyword}
	 				</if>  
				</if>
				<if test="searchOrder == 2">
					SYSDATE >= discount.expiration_date 
	 				AND discount.purchase_date IS NOT NULL
	 				<if test="searchKeyword !=''">
	 					AND owner_id = #{searchKeyword}
	 				</if>
				</if>
			</if>
			
			<if test="searchCondition == 1">
				
				<if test="searchOrder == 1">
					expiration_date > SYSDATE
	 				AND purchase_date IS NULL
	 				<if test="searchKeyword !=''">
	 					AND coupon_no = #{searchKeyword}
	 				</if>	 				
				</if>
				<if test="searchOrder == 2">				
					SYSDATE >= discount.expiration_date 
	 				AND purchase_date IS NOT NULL
	 				<if test="searchKeyword !=''">
	 					AND owner_id = #{searchKeyword}
	 				</if>	 				
				</if>
			</if>		
		</where>	
	</select>
	 
	 
	 
	 <select id="getDiscountListHistory" parameterType="search" resultMap="discountSelectMap">
		SELECT *  FROM 
		(SELECT ROW_NUMBER() OVER(ORDER BY discount.discount_no) num, discount.* 
		FROM discount
		<where>
			<if test="searchCondition == 0">
				
				<if test="searchOrder == 1">
					expiration_date > SYSDATE
	 				AND purchase_date IS NULL
	 				<if test="searchKeyword !=''">
	 					AND coupon_no = #{searchKeyword}
	 				</if>  
				</if>
				<if test="searchOrder == 2">
					SYSDATE >= discount.expiration_date 
	 				AND discount.purchase_date IS NOT NULL
	 				<if test="searchKeyword !=''">
	 					AND owner_id = #{searchKeyword}
	 				</if>
				</if>
			</if>
			
			<if test="searchCondition == 1">
				
				<if test="searchOrder == 1">
					expiration_date > SYSDATE
	 				AND purchase_date IS NULL
	 				<if test="searchKeyword !=''">
	 					AND coupon_no = #{searchKeyword}
	 				</if>	 				
				</if>
				<if test="searchOrder == 2">				
					SYSDATE >= discount.expiration_date 
	 				AND purchase_date IS NOT NULL
	 				<if test="searchKeyword !=''">
	 					AND owner_id = #{searchKeyword}
	 				</if>	 				
				</if>
			</if>		
		</where>	
		)WHERE num BETWEEN #{startRowNum} AND #{endRowNum} 	
	 </select>	
	 
	 
	 <insert  id="useDiscount" parameterType="hashmap">
	 	UPDATE discount
	 	SET product_no = #{productNo}, purchase_date = SYSDATE
	 	WHERE discount_no = #{discountNo}	 		 
	 </insert>
	 
	 
	 	 
	 <delete id="deleteDiscount" parameterType="int">
	 	DELETE FROM discount 
	 	WHERE discount_no = #{value} 	 
	 </delete>
	 	 
	 
</mapper>